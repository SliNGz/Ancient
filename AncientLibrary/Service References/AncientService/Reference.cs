//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ancientlib.AncientService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/MODEL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ancientlib.AncientService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ancientlib.AncientService.Score))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ancientlib.AncientService.Player))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ancientlib.AncientService.EntityStatus EntityStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool checkValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ancientlib.AncientService.ErrorStatus statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ancientlib.AncientService.EntityStatus EntityStatus {
            get {
                return this.EntityStatusField;
            }
            set {
                if ((this.EntityStatusField.Equals(value) != true)) {
                    this.EntityStatusField = value;
                    this.RaisePropertyChanged("EntityStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Num {
            get {
                return this.NumField;
            }
            set {
                if ((this.NumField.Equals(value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool checkValidation {
            get {
                return this.checkValidationField;
            }
            set {
                if ((this.checkValidationField.Equals(value) != true)) {
                    this.checkValidationField = value;
                    this.RaisePropertyChanged("checkValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ancientlib.AncientService.ErrorStatus status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MODEL")]
    [System.SerializableAttribute()]
    public partial class User : ancientlib.AncientService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PswField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Family {
            get {
                return this.FamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyField, value) != true)) {
                    this.FamilyField = value;
                    this.RaisePropertyChanged("Family");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Psw {
            get {
                return this.PswField;
            }
            set {
                if ((object.ReferenceEquals(this.PswField, value) != true)) {
                    this.PswField = value;
                    this.RaisePropertyChanged("Psw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((this.RolesField.Equals(value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Score", Namespace="http://schemas.datacontract.org/2004/07/MODEL")]
    [System.SerializableAttribute()]
    public partial class Score : ancientlib.AncientService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerNicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayerNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScoreDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerNickname {
            get {
                return this.PlayerNicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNicknameField, value) != true)) {
                    this.PlayerNicknameField = value;
                    this.RaisePropertyChanged("PlayerNickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerNo {
            get {
                return this.PlayerNoField;
            }
            set {
                if ((this.PlayerNoField.Equals(value) != true)) {
                    this.PlayerNoField = value;
                    this.RaisePropertyChanged("PlayerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ScoreDate {
            get {
                return this.ScoreDateField;
            }
            set {
                if ((this.ScoreDateField.Equals(value) != true)) {
                    this.ScoreDateField = value;
                    this.RaisePropertyChanged("ScoreDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/MODEL")]
    [System.SerializableAttribute()]
    public partial class Player : ancientlib.AncientService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EyesColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EyesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HairColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HairIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LukField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxHealthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxManaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkinColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WsdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Dex {
            get {
                return this.DexField;
            }
            set {
                if ((this.DexField.Equals(value) != true)) {
                    this.DexField = value;
                    this.RaisePropertyChanged("Dex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Exp {
            get {
                return this.ExpField;
            }
            set {
                if ((this.ExpField.Equals(value) != true)) {
                    this.ExpField = value;
                    this.RaisePropertyChanged("Exp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EyesColor {
            get {
                return this.EyesColorField;
            }
            set {
                if ((this.EyesColorField.Equals(value) != true)) {
                    this.EyesColorField = value;
                    this.RaisePropertyChanged("EyesColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EyesID {
            get {
                return this.EyesIDField;
            }
            set {
                if ((this.EyesIDField.Equals(value) != true)) {
                    this.EyesIDField = value;
                    this.RaisePropertyChanged("EyesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HairColor {
            get {
                return this.HairColorField;
            }
            set {
                if ((this.HairColorField.Equals(value) != true)) {
                    this.HairColorField = value;
                    this.RaisePropertyChanged("HairColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HairID {
            get {
                return this.HairIDField;
            }
            set {
                if ((this.HairIDField.Equals(value) != true)) {
                    this.HairIDField = value;
                    this.RaisePropertyChanged("HairID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Luk {
            get {
                return this.LukField;
            }
            set {
                if ((this.LukField.Equals(value) != true)) {
                    this.LukField = value;
                    this.RaisePropertyChanged("Luk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxHealth {
            get {
                return this.MaxHealthField;
            }
            set {
                if ((this.MaxHealthField.Equals(value) != true)) {
                    this.MaxHealthField = value;
                    this.RaisePropertyChanged("MaxHealth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxMana {
            get {
                return this.MaxManaField;
            }
            set {
                if ((this.MaxManaField.Equals(value) != true)) {
                    this.MaxManaField = value;
                    this.RaisePropertyChanged("MaxMana");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkinColor {
            get {
                return this.SkinColorField;
            }
            set {
                if ((this.SkinColorField.Equals(value) != true)) {
                    this.SkinColorField = value;
                    this.RaisePropertyChanged("SkinColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Str {
            get {
                return this.StrField;
            }
            set {
                if ((this.StrField.Equals(value) != true)) {
                    this.StrField = value;
                    this.RaisePropertyChanged("Str");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserNum {
            get {
                return this.UserNumField;
            }
            set {
                if ((this.UserNumField.Equals(value) != true)) {
                    this.UserNumField = value;
                    this.RaisePropertyChanged("UserNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wsd {
            get {
                return this.WsdField;
            }
            set {
                if ((this.WsdField.Equals(value) != true)) {
                    this.WsdField = value;
                    this.RaisePropertyChanged("Wsd");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityStatus", Namespace="http://schemas.datacontract.org/2004/07/MODEL")]
    public enum EntityStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorStatus", Namespace="http://schemas.datacontract.org/2004/07/HELPER")]
    public enum ErrorStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMPTY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERROR = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/MODEL", ItemName="User")]
    [System.SerializableAttribute()]
    public class Users : System.Collections.Generic.List<ancientlib.AncientService.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Players", Namespace="http://schemas.datacontract.org/2004/07/MODEL", ItemName="Player")]
    [System.SerializableAttribute()]
    public class Players : System.Collections.Generic.List<ancientlib.AncientService.Player> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Scores", Namespace="http://schemas.datacontract.org/2004/07/MODEL", ItemName="Score")]
    [System.SerializableAttribute()]
    public class Scores : System.Collections.Generic.List<ancientlib.AncientService.Score> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AncientService.IAncientService")]
    public interface IAncientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/IsUserValid", ReplyAction="http://tempuri.org/IAncientService/IsUserValidResponse")]
        bool IsUserValid(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/IsUserValid", ReplyAction="http://tempuri.org/IAncientService/IsUserValidResponse")]
        System.Threading.Tasks.Task<bool> IsUserValidAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UsernameExists", ReplyAction="http://tempuri.org/IAncientService/UsernameExistsResponse")]
        bool UsernameExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UsernameExists", ReplyAction="http://tempuri.org/IAncientService/UsernameExistsResponse")]
        System.Threading.Tasks.Task<bool> UsernameExistsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/EmailExists", ReplyAction="http://tempuri.org/IAncientService/EmailExistsResponse")]
        bool EmailExists(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/EmailExists", ReplyAction="http://tempuri.org/IAncientService/EmailExistsResponse")]
        System.Threading.Tasks.Task<bool> EmailExistsAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetPasswordFromUsername", ReplyAction="http://tempuri.org/IAncientService/GetPasswordFromUsernameResponse")]
        string GetPasswordFromUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetPasswordFromUsername", ReplyAction="http://tempuri.org/IAncientService/GetPasswordFromUsernameResponse")]
        System.Threading.Tasks.Task<string> GetPasswordFromUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetRoleOfUser", ReplyAction="http://tempuri.org/IAncientService/GetRoleOfUserResponse")]
        int GetRoleOfUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetRoleOfUser", ReplyAction="http://tempuri.org/IAncientService/GetRoleOfUserResponse")]
        System.Threading.Tasks.Task<int> GetRoleOfUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/AddUser", ReplyAction="http://tempuri.org/IAncientService/AddUserResponse")]
        void AddUser(string username, string password, string email, string name, string family, System.DateTime birthDate, string gender, int roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/AddUser", ReplyAction="http://tempuri.org/IAncientService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(string username, string password, string email, string name, string family, System.DateTime birthDate, string gender, int roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetCharacterByNickname", ReplyAction="http://tempuri.org/IAncientService/GetCharacterByNicknameResponse")]
        ancientlib.AncientService.Player GetCharacterByNickname(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetCharacterByNickname", ReplyAction="http://tempuri.org/IAncientService/GetCharacterByNicknameResponse")]
        System.Threading.Tasks.Task<ancientlib.AncientService.Player> GetCharacterByNicknameAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/SetCharacterImage", ReplyAction="http://tempuri.org/IAncientService/SetCharacterImageResponse")]
        void SetCharacterImage(string nickname, int width, int height, int[] colorsArray);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/SetCharacterImage", ReplyAction="http://tempuri.org/IAncientService/SetCharacterImageResponse")]
        System.Threading.Tasks.Task SetCharacterImageAsync(string nickname, int width, int height, int[] colorsArray);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetCharacterImage", ReplyAction="http://tempuri.org/IAncientService/GetCharacterImageResponse")]
        ancientlib.AncientService.GetCharacterImageResponse GetCharacterImage(ancientlib.AncientService.GetCharacterImageRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetCharacterImage", ReplyAction="http://tempuri.org/IAncientService/GetCharacterImageResponse")]
        System.Threading.Tasks.Task<ancientlib.AncientService.GetCharacterImageResponse> GetCharacterImageAsync(ancientlib.AncientService.GetCharacterImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetUserCharacterNames", ReplyAction="http://tempuri.org/IAncientService/GetUserCharacterNamesResponse")]
        string[] GetUserCharacterNames(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetUserCharacterNames", ReplyAction="http://tempuri.org/IAncientService/GetUserCharacterNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetUserCharacterNamesAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/AddCharacterOfUser", ReplyAction="http://tempuri.org/IAncientService/AddCharacterOfUserResponse")]
        void AddCharacterOfUser(string username, ancientlib.AncientService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/AddCharacterOfUser", ReplyAction="http://tempuri.org/IAncientService/AddCharacterOfUserResponse")]
        System.Threading.Tasks.Task AddCharacterOfUserAsync(string username, ancientlib.AncientService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UpdateCharacterByID", ReplyAction="http://tempuri.org/IAncientService/UpdateCharacterByIDResponse")]
        void UpdateCharacterByID(ancientlib.AncientService.Player character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UpdateCharacterByID", ReplyAction="http://tempuri.org/IAncientService/UpdateCharacterByIDResponse")]
        System.Threading.Tasks.Task UpdateCharacterByIDAsync(ancientlib.AncientService.Player character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UpdateCharacter", ReplyAction="http://tempuri.org/IAncientService/UpdateCharacterResponse")]
        void UpdateCharacter(string nickname, ancientlib.AncientService.Player character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UpdateCharacter", ReplyAction="http://tempuri.org/IAncientService/UpdateCharacterResponse")]
        System.Threading.Tasks.Task UpdateCharacterAsync(string nickname, ancientlib.AncientService.Player character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/AddScore", ReplyAction="http://tempuri.org/IAncientService/AddScoreResponse")]
        void AddScore(string nickname, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/AddScore", ReplyAction="http://tempuri.org/IAncientService/AddScoreResponse")]
        System.Threading.Tasks.Task AddScoreAsync(string nickname, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetUsers", ReplyAction="http://tempuri.org/IAncientService/GetUsersResponse")]
        ancientlib.AncientService.Users GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetUsers", ReplyAction="http://tempuri.org/IAncientService/GetUsersResponse")]
        System.Threading.Tasks.Task<ancientlib.AncientService.Users> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetPlayers", ReplyAction="http://tempuri.org/IAncientService/GetPlayersResponse")]
        ancientlib.AncientService.Players GetPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetPlayers", ReplyAction="http://tempuri.org/IAncientService/GetPlayersResponse")]
        System.Threading.Tasks.Task<ancientlib.AncientService.Players> GetPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetScores", ReplyAction="http://tempuri.org/IAncientService/GetScoresResponse")]
        ancientlib.AncientService.Scores GetScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetScores", ReplyAction="http://tempuri.org/IAncientService/GetScoresResponse")]
        System.Threading.Tasks.Task<ancientlib.AncientService.Scores> GetScoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetUserCharacters", ReplyAction="http://tempuri.org/IAncientService/GetUserCharactersResponse")]
        ancientlib.AncientService.Player[] GetUserCharacters(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetUserCharacters", ReplyAction="http://tempuri.org/IAncientService/GetUserCharactersResponse")]
        System.Threading.Tasks.Task<ancientlib.AncientService.Player[]> GetUserCharactersAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/NicknameExists", ReplyAction="http://tempuri.org/IAncientService/NicknameExistsResponse")]
        bool NicknameExists(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/NicknameExists", ReplyAction="http://tempuri.org/IAncientService/NicknameExistsResponse")]
        System.Threading.Tasks.Task<bool> NicknameExistsAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UpdateUser", ReplyAction="http://tempuri.org/IAncientService/UpdateUserResponse")]
        void UpdateUser(int id, ancientlib.AncientService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/UpdateUser", ReplyAction="http://tempuri.org/IAncientService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(int id, ancientlib.AncientService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/DeleteUser", ReplyAction="http://tempuri.org/IAncientService/DeleteUserResponse")]
        void DeleteUser(ancientlib.AncientService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/DeleteUser", ReplyAction="http://tempuri.org/IAncientService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(ancientlib.AncientService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/DeleteCharacter", ReplyAction="http://tempuri.org/IAncientService/DeleteCharacterResponse")]
        void DeleteCharacter(ancientlib.AncientService.Player character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/DeleteCharacter", ReplyAction="http://tempuri.org/IAncientService/DeleteCharacterResponse")]
        System.Threading.Tasks.Task DeleteCharacterAsync(ancientlib.AncientService.Player character);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/DeleteScore", ReplyAction="http://tempuri.org/IAncientService/DeleteScoreResponse")]
        void DeleteScore(ancientlib.AncientService.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/DeleteScore", ReplyAction="http://tempuri.org/IAncientService/DeleteScoreResponse")]
        System.Threading.Tasks.Task DeleteScoreAsync(ancientlib.AncientService.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetTopFiveScores", ReplyAction="http://tempuri.org/IAncientService/GetTopFiveScoresResponse")]
        ancientlib.AncientService.Score[] GetTopFiveScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAncientService/GetTopFiveScores", ReplyAction="http://tempuri.org/IAncientService/GetTopFiveScoresResponse")]
        System.Threading.Tasks.Task<ancientlib.AncientService.Score[]> GetTopFiveScoresAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCharacterImage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCharacterImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string nickname;
        
        public GetCharacterImageRequest() {
        }
        
        public GetCharacterImageRequest(string nickname) {
            this.nickname = nickname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCharacterImageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCharacterImageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int[] GetCharacterImageResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int height;
        
        public GetCharacterImageResponse() {
        }
        
        public GetCharacterImageResponse(int[] GetCharacterImageResult, int width, int height) {
            this.GetCharacterImageResult = GetCharacterImageResult;
            this.width = width;
            this.height = height;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAncientServiceChannel : ancientlib.AncientService.IAncientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AncientServiceClient : System.ServiceModel.ClientBase<ancientlib.AncientService.IAncientService>, ancientlib.AncientService.IAncientService {
        
        public AncientServiceClient() {
        }
        
        public AncientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AncientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AncientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AncientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsUserValid(string username, string password) {
            return base.Channel.IsUserValid(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserValidAsync(string username, string password) {
            return base.Channel.IsUserValidAsync(username, password);
        }
        
        public bool UsernameExists(string username) {
            return base.Channel.UsernameExists(username);
        }
        
        public System.Threading.Tasks.Task<bool> UsernameExistsAsync(string username) {
            return base.Channel.UsernameExistsAsync(username);
        }
        
        public bool EmailExists(string email) {
            return base.Channel.EmailExists(email);
        }
        
        public System.Threading.Tasks.Task<bool> EmailExistsAsync(string email) {
            return base.Channel.EmailExistsAsync(email);
        }
        
        public string GetPasswordFromUsername(string username) {
            return base.Channel.GetPasswordFromUsername(username);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordFromUsernameAsync(string username) {
            return base.Channel.GetPasswordFromUsernameAsync(username);
        }
        
        public int GetRoleOfUser(string username) {
            return base.Channel.GetRoleOfUser(username);
        }
        
        public System.Threading.Tasks.Task<int> GetRoleOfUserAsync(string username) {
            return base.Channel.GetRoleOfUserAsync(username);
        }
        
        public void AddUser(string username, string password, string email, string name, string family, System.DateTime birthDate, string gender, int roles) {
            base.Channel.AddUser(username, password, email, name, family, birthDate, gender, roles);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(string username, string password, string email, string name, string family, System.DateTime birthDate, string gender, int roles) {
            return base.Channel.AddUserAsync(username, password, email, name, family, birthDate, gender, roles);
        }
        
        public ancientlib.AncientService.Player GetCharacterByNickname(string nickname) {
            return base.Channel.GetCharacterByNickname(nickname);
        }
        
        public System.Threading.Tasks.Task<ancientlib.AncientService.Player> GetCharacterByNicknameAsync(string nickname) {
            return base.Channel.GetCharacterByNicknameAsync(nickname);
        }
        
        public void SetCharacterImage(string nickname, int width, int height, int[] colorsArray) {
            base.Channel.SetCharacterImage(nickname, width, height, colorsArray);
        }
        
        public System.Threading.Tasks.Task SetCharacterImageAsync(string nickname, int width, int height, int[] colorsArray) {
            return base.Channel.SetCharacterImageAsync(nickname, width, height, colorsArray);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ancientlib.AncientService.GetCharacterImageResponse ancientlib.AncientService.IAncientService.GetCharacterImage(ancientlib.AncientService.GetCharacterImageRequest request) {
            return base.Channel.GetCharacterImage(request);
        }
        
        public int[] GetCharacterImage(string nickname, out int width, out int height) {
            ancientlib.AncientService.GetCharacterImageRequest inValue = new ancientlib.AncientService.GetCharacterImageRequest();
            inValue.nickname = nickname;
            ancientlib.AncientService.GetCharacterImageResponse retVal = ((ancientlib.AncientService.IAncientService)(this)).GetCharacterImage(inValue);
            width = retVal.width;
            height = retVal.height;
            return retVal.GetCharacterImageResult;
        }
        
        public System.Threading.Tasks.Task<ancientlib.AncientService.GetCharacterImageResponse> GetCharacterImageAsync(ancientlib.AncientService.GetCharacterImageRequest request) {
            return base.Channel.GetCharacterImageAsync(request);
        }
        
        public string[] GetUserCharacterNames(string username) {
            return base.Channel.GetUserCharacterNames(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserCharacterNamesAsync(string username) {
            return base.Channel.GetUserCharacterNamesAsync(username);
        }
        
        public void AddCharacterOfUser(string username, ancientlib.AncientService.Player player) {
            base.Channel.AddCharacterOfUser(username, player);
        }
        
        public System.Threading.Tasks.Task AddCharacterOfUserAsync(string username, ancientlib.AncientService.Player player) {
            return base.Channel.AddCharacterOfUserAsync(username, player);
        }
        
        public void UpdateCharacterByID(ancientlib.AncientService.Player character) {
            base.Channel.UpdateCharacterByID(character);
        }
        
        public System.Threading.Tasks.Task UpdateCharacterByIDAsync(ancientlib.AncientService.Player character) {
            return base.Channel.UpdateCharacterByIDAsync(character);
        }
        
        public void UpdateCharacter(string nickname, ancientlib.AncientService.Player character) {
            base.Channel.UpdateCharacter(nickname, character);
        }
        
        public System.Threading.Tasks.Task UpdateCharacterAsync(string nickname, ancientlib.AncientService.Player character) {
            return base.Channel.UpdateCharacterAsync(nickname, character);
        }
        
        public void AddScore(string nickname, int score) {
            base.Channel.AddScore(nickname, score);
        }
        
        public System.Threading.Tasks.Task AddScoreAsync(string nickname, int score) {
            return base.Channel.AddScoreAsync(nickname, score);
        }
        
        public ancientlib.AncientService.Users GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<ancientlib.AncientService.Users> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public ancientlib.AncientService.Players GetPlayers() {
            return base.Channel.GetPlayers();
        }
        
        public System.Threading.Tasks.Task<ancientlib.AncientService.Players> GetPlayersAsync() {
            return base.Channel.GetPlayersAsync();
        }
        
        public ancientlib.AncientService.Scores GetScores() {
            return base.Channel.GetScores();
        }
        
        public System.Threading.Tasks.Task<ancientlib.AncientService.Scores> GetScoresAsync() {
            return base.Channel.GetScoresAsync();
        }
        
        public ancientlib.AncientService.Player[] GetUserCharacters(string username) {
            return base.Channel.GetUserCharacters(username);
        }
        
        public System.Threading.Tasks.Task<ancientlib.AncientService.Player[]> GetUserCharactersAsync(string username) {
            return base.Channel.GetUserCharactersAsync(username);
        }
        
        public bool NicknameExists(string nickname) {
            return base.Channel.NicknameExists(nickname);
        }
        
        public System.Threading.Tasks.Task<bool> NicknameExistsAsync(string nickname) {
            return base.Channel.NicknameExistsAsync(nickname);
        }
        
        public void UpdateUser(int id, ancientlib.AncientService.User user) {
            base.Channel.UpdateUser(id, user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(int id, ancientlib.AncientService.User user) {
            return base.Channel.UpdateUserAsync(id, user);
        }
        
        public void DeleteUser(ancientlib.AncientService.User user) {
            base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(ancientlib.AncientService.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public void DeleteCharacter(ancientlib.AncientService.Player character) {
            base.Channel.DeleteCharacter(character);
        }
        
        public System.Threading.Tasks.Task DeleteCharacterAsync(ancientlib.AncientService.Player character) {
            return base.Channel.DeleteCharacterAsync(character);
        }
        
        public void DeleteScore(ancientlib.AncientService.Score score) {
            base.Channel.DeleteScore(score);
        }
        
        public System.Threading.Tasks.Task DeleteScoreAsync(ancientlib.AncientService.Score score) {
            return base.Channel.DeleteScoreAsync(score);
        }
        
        public ancientlib.AncientService.Score[] GetTopFiveScores() {
            return base.Channel.GetTopFiveScores();
        }
        
        public System.Threading.Tasks.Task<ancientlib.AncientService.Score[]> GetTopFiveScoresAsync() {
            return base.Channel.GetTopFiveScoresAsync();
        }
    }
}
